>>> matrix_mul = __import__('100-matrix_mul').matrix_mul
>>> m1 = [[1, 2], [2, 4], [2, 3]]
>>> m2 = [[3, 2, 3], [2, 4, 5]]
>>> m3 = "Ahmed"
>>> m4 = [[1, 2, 4], "Ahmed"]
>>> m5 = [[1, 3, "Ahmed"], [2 ,4, 1]]
>>> m6 = [[1, 2, 3], [1, 2], [2, 3]]
>>> m7 = [[1+2j, 3, 3], [1, 2, 3]]
>>> m8 = [[1, 2], [3, 2]]
>>> try:
... 	matrix_mul(m1, m3)
... except TypeError as err:
... 	print(err)
...
m_b must be a list
>>> try:
...     matrix_mul(m4, m2)
... except TypeError as err:
...     print(err)
...
m_a must be a list of lists
>>> try:
...     matrix_mul(m1, [])
... except ValueError as err:
...     print(err)
...
m_b can't be empty
>>> try:
...     matrix_mul([[]], m1)
... except ValueError as err:
...     print(err)
...
m_a can't be empty
>>> try:
...     matrix_mul(m5, m1)
... except TypeError as err:
...     print(err)
...
m_a should contain only integers or floats
>>> try:
...     matrix_mul(m1, m5)
... except TypeError as err:
...     print(err)
...
m_b should contain only integers or floats
>>> try:
...     matrix_mul(m1, m6)
... except TypeError as err:
...     print(err)
...
each row of m_b must be of the same size
>>> try:
...     matrix_mul(m6, m5)
... except TypeError as err:
...     print(err)
...
each row of m_a must be of the same size
>>> try:
...     matrix_mul(m1, m7)
... except TypeError as err:
...     print(err)
...
m_b should contain only integers or floats
>>> try:
...     matrix_mul(m2, m8)
... except ValueError as err:
...     print(err)
...
m_a and m_b can't be multiplied
