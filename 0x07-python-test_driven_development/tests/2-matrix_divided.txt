>>> matrix_divided = __import__("2-matrix_divided").matrix_divided
>>> matrix = [[1, 2], [9, 0]]
>>> matrix_divided(matrix, 2)
[[0.5, 1.0], [4.5, 0.0]]
>>> try:
...     matrix_divided(matrix, 0)
... except ZeroDivisionError as err:
...     print(err)
...
division by zero
>>> matrix = [[1, 3, 4], [1, 2]]
>>> try:
...     matrix_divided(matrix, 3)
... except TypeError as err:
...     print(err)
...
Each row of the matrix must have the same size
>>> matrix = [[1, 3], [1, "Ahmed"]]
>>> try:
...     matrix_divided(matrix, 2)
... except TypeError as err:
...     print(err)
...
matrix must be a matrix (list of lists) of integers/floats
>>> matrix = "Ahmed Es-salhi"
>>> try:
...     matrix_divided(matrix, 2)
... except TypeError as err:
...     print(err)
...
matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [[1, 3], [1, -float('inf')]]
>>> try:
...     matrix_divided(matrix, 2)
... except TypeError as err:
...     print(err)
...
matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [[1, 3], [1, float('nan')]]
>>> try:
...     matrix_divided(matrix, 2)
... except TypeError as err:
...     print(err)
...
matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [[1, 2], [2, 4], [2, 5]]
>>> try:
...     matrix_divided(matrix, float('inf'))
... except TypeError as err:
...     print(err)
...
div must be a number
>>> try:
...     matrix_divided(matrix, -float('inf'))
... except TypeError as err:
...     print(err)
...
div must be a number
>>> try:
...     matrix_divided(matrix, float('nan'))
... except TypeError as err:
...     print(err)
...
div must be a number